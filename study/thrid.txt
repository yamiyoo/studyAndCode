二进制————八进制：三位二进制就可表0～7；可在程序中直接使用八进制表示数字；这时必须用0做开头，占位符是“%o”，当程序中写八进制数字，但占位符是十进制的，则被转换成十进制
二进制————十六进制：四位二进制数位则会表示一位十六进制；这时数字以0x做开头；占位符是“%x”或“%X”，前者输出字母时全为小写，后者输出字母大写。
(进制开头0或0x输出中都不显示)

操作符用来表示对数字处理规则；根据操作符所需配合的数字个数把操作符分成单目操作符，双目操所符，三目操作符
双目操作符：（+-*／）
／：整除部分结果  %：取余  
 =：赋值操作符，赋值语句可当数用，存储区可代表其内部数字，先右后左
绝大部分双目操作符可以和赋值操作符合并成复合赋值操作符+=，*=；这些操作会将运算结果赋值给左边存储区
复合操作符优先级和赋值操作符优先级一样低；
自增（++）和自减（--）都是单目操作符，他们都只能和存储区配合使用，吧内容加一或减一；他们分为前操作和后操作；前操作：当数字使用的时候是修改后的数字，后操作：当作数字使用的时候是后操作数字
++i,--i:在使用i之前，i值自增减
i++，i--：使用i之后，i值自增减
同级运算从左至右，例如i=-i++，先执行i++，
不要再一条语句对同一个变量多次自增自减换算会导致结果不确定
逻辑操作符编写逻辑表达式：
  ！单目逻辑操作符，根据bool值取反
双目逻辑操作符：==；！=；> ; < ; >= ; <= ;
3<7<5：计算机从左到右表示3<7为真,用1表示，1<5;为真
最多只包含一个双目逻辑操作符表达式较简单逻辑表达式，他结果和数学中一定一摸一样
c语言包含多个双目逻辑操作符首先必须拆分成多个简单逻辑表达式，用&&或||合并
           假&&任意：假         真||任意：真
与和或都有短路特征（如果前一个逻辑表达式的结果能决定整个逻辑表达式的结果则后一个逻辑表达式不计算）例如m=0；1||++m：m为0，++m被短路

位操作符～：可根据数字计算出另一个数字，这两个数字二进制所有位相反；按位取反
双目为操作：按位与& 按位或|按位异或
 &任意位上是0，该位结果为0；|任意位上是1，该位结果为1； ^任意位不同结果为1

移位操作把二进制内容向左或向右移动n位；
 目标数字>>向右一位位数 目标数字<<向左移动位数（增加位数用0填充，负数右移，会用1填充；当使用变量来左右移，首位为1的计算机认为是有符号位；使用数字直接右移，则为无符号数字，用0填充）
位操作符不会改变任何现有存储区内容
&：单目操作符使用，计算存储区地址，%p为占位符，表示为32个二进制位
*：单目操作，根据找到地址所对应存储区

三目操作符：从三个里面选择一个进行计算，
格式：bool值？公式一：公式二（真则公式一假则公式二）
