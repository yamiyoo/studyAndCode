函数自己调用自己：递归函数
如果一个问题可以拆分成多个小问题一个小问题与原来大问题本质一样，这种情况可采用递归
递归编写步骤：
1.编写语句解决分解后的小问题（假设递归函数可使用）
2.函数开头编写分支处理不可分解情况，并保证函数结束
跨函数不能使用变量，不同函数有不同作用域
声明在函数里的局部变量，局部变量的作用域只包含在内部
	的语句
全局变量作用域在全局中，包含程序中所有语句
全局变量如果没有被初始化，会自动初始化为0
局部变量可和全局变量重名，变量优先代表局部变量, 编写程序
    优先考路局部变量，作用域越小越好用
存储区使用不受到作用域限制，可跨函数使用存储区（数组做形参）
存储区使用受到生命周期限制
生命周期指一段时间在生命周期开始时把存储区分配给程序使用
	在生命周期截止时计算机把程序使用的存储区收回
全局变量是整个生命周期执行时间
局部变量函数的生命周期
如果使用多次执行则每次执行时计算机都会分配给存储区，每次分配
    存储区可能相同可能不同
静态变量static生命周期是整个程序执行时间，只要程序没有结束静态
	变量存储区都可以使用
如果一个函数多次执行则每次执行静态局部变量都是同一个
静态局部变量初始化只在程序开始时执行一次，当下一次赋值
	保留赋值后值
静态全局变量的作用域只包含在声明它的文件中所有语句
	（不可跨文件使用）

指针变量：记录数地址数据
指针变量用来找普通变量；记录有效地址指针变量
	才能使用
声明指针变量前加*，p_开头
  P_num=&num
  *p_num=10
    得num为10
捆绑过的指针前*可表示指针捆绑的存储区

指针也分类型，不同类型指针适合于不同类型
	指针变量，这个时候需要在每个指针变量名
	前单独加*
没有捆绑的指针分为：
1空指针记录空地址（NULL）地址数值为0
2其他没有捆绑的指针都叫做也指针
程序里禁止出现野指针
所有指针变量都得初始化，初始化的时候*没有参与
	初始化过程

